{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyOkbfWaaEpf3nTyj3GbD8zX"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Nu6GW7MQQFSz","executionInfo":{"status":"ok","timestamp":1761427692367,"user_tz":-120,"elapsed":25969,"user":{"displayName":"Federico Pierucci","userId":"09409038380538102732"}},"outputId":"ee9bab47-8889-4d5a-c0d1-f7d58613e795"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","/content/drive/MyDrive/LLM-refusal-directions-and-preferences\n","✓ Setup complete\n"]}],"source":["\"\"\"\n","EXPERIMENT 0: Direction Validation\n","===================================\n","Goal: Verify that refusal directions actually separate harmful/harmless prompts\n","\n","Steps:\n","1. Load harmful and harmless datasets\n","2. Compute direction at each layer: harmful_mean - harmless_mean\n","3. Test statistical separation (t-test, Cohen's d)\n","4. Identify valid layers\n","\"\"\"\n","\n","# Mount Drive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","# Navigate\n","%cd /content/drive/MyDrive/LLM-refusal-directions-and-preferences\n","\n","# Add to path\n","import sys\n","sys.path.append('/content/drive/MyDrive/LLM-refusal-directions-and-preferences')\n","\n","print(\"✓ Setup complete\")"]},{"cell_type":"code","source":["# Install requirements\n","!pip install -q -r requirements.txt\n","\n","# Imports\n","import torch\n","import numpy as np\n","from transformers import AutoTokenizer, AutoModelForCausalLM\n","from datasets import load_dataset\n","from scipy.stats import ttest_ind\n","import matplotlib.pyplot as plt\n","from tqdm import tqdm\n","\n","print(\"✓ All imports successful\")\n","print(f\"✓ CUDA available: {torch.cuda.is_available()}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u9E2oi4yQUUf","executionInfo":{"status":"ok","timestamp":1761427717390,"user_tz":-120,"elapsed":23350,"user":{"displayName":"Federico Pierucci","userId":"09409038380538102732"}},"outputId":"c8a03ce6-11e2-4565-f0ad-84b4c79a80ac"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["✓ All imports successful\n","✓ CUDA available: True\n"]}]},{"cell_type":"code","source":["# Load model\n","model_name = \"Qwen/Qwen2.5-1.5B-Instruct\"\n","print(f\"Loading {model_name}...\")\n","\n","tokenizer = AutoTokenizer.from_pretrained(model_name)\n","model = AutoModelForCausalLM.from_pretrained(\n","    model_name,\n","    torch_dtype=torch.float16,\n","    device_map=\"auto\"\n",")\n","\n","n_layers = len(model.model.layers)\n","hidden_size = model.config.hidden_size\n","\n","print(f\"✓ Model loaded\")\n","print(f\"✓ Layers: {n_layers}\")\n","print(f\"✓ Hidden size: {hidden_size}\")"],"metadata":{"id":"as5z0Qq8QaTV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Load harmful and harmless datasets\n","print(\"Loading datasets...\")\n","\n","harmful_ds = load_dataset('mlabonne/harmful_behaviors')\n","harmful_prompts = harmful_ds['train']['text'][:256]\n","\n","harmless_ds = load_dataset('mlabonne/harmless_alpaca')\n","harmless_prompts = harmless_ds['train']['text'][:256]\n","\n","print(f\"✓ Loaded {len(harmful_prompts)} harmful prompts\")\n","print(f\"✓ Loaded {len(harmless_prompts)} harmless prompts\")\n","\n","# Show examples\n","print(\"\\n\" + \"=\"*60)\n","print(\"EXAMPLES:\")\n","print(\"=\"*60)\n","print(f\"\\nHarmful example 1: {harmful_prompts[0][:80]}...\")\n","print(f\"Harmful example 2: {harmful_prompts[1][:80]}...\")\n","print(f\"\\nHarmless example 1: {harmless_prompts[0][:80]}...\")\n","print(f\"Harmless example 2: {harmless_prompts[1][:80]}...\")"],"metadata":{"id":"7ExQ4mpHR1e1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def get_activation(prompt, model, tokenizer, layer_idx):\n","    \"\"\"\n","    Extract activation at last token position for a specific layer\n","\n","    Args:\n","        prompt: text string\n","        layer_idx: which layer (0 to n_layers-1)\n","\n","    Returns:\n","        numpy array of shape (hidden_size,)\n","    \"\"\"\n","    # Format prompt\n","    messages = [{\"role\": \"user\", \"content\": prompt}]\n","    formatted = tokenizer.apply_chat_template(\n","        messages,\n","        tokenize=False,\n","        add_generation_prompt=True\n","    )\n","\n","    # Tokenize\n","    inputs = tokenizer(\n","        formatted,\n","        return_tensors=\"pt\",\n","        truncation=True,\n","        max_length=512\n","    ).to(model.device)\n","\n","    # Get activations\n","    with torch.no_grad():\n","        outputs = model(**inputs, output_hidden_states=True)\n","\n","    # Extract last token position, specific layer\n","    last_pos = inputs['input_ids'].shape[1] - 1\n","    activation = outputs.hidden_states[layer_idx + 1][0, last_pos, :].cpu().numpy()\n","\n","    return activation\n","\n","# Test it\n","test_activation = get_activation(\"Hello\", model, tokenizer, layer_idx=15)\n","print(f\"✓ Function works!\")\n","print(f\"✓ Activation shape: {test_activation.shape}\")\n","print(f\"✓ Mean: {test_activation.mean():.4f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mXMJeiJ3SC6i","executionInfo":{"status":"ok","timestamp":1761427865425,"user_tz":-120,"elapsed":1535,"user":{"displayName":"Federico Pierucci","userId":"09409038380538102732"}},"outputId":"8308cf1d-2882-4b2b-93f3-ac3ae4de795e"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["✓ Function works!\n","✓ Activation shape: (1536,)\n","✓ Mean: -0.0006\n"]}]},{"cell_type":"code","source":["print(\"=\"*60)\n","print(\"COMPUTING REFUSAL DIRECTIONS FOR ALL LAYERS\")\n","print(\"=\"*60)\n","print(f\"This will process {len(harmful_prompts)} harmful + {len(harmless_prompts)} harmless prompts\")\n","print(f\"Across {n_layers} layers\")\n","print(f\"Estimated time: 10-15 minutes\\n\")\n","\n","all_directions = []\n","\n","for layer_idx in range(n_layers):\n","    print(f\"Processing layer {layer_idx}/{n_layers-1}...\", end=\" \")\n","\n","    # Collect activations for this layer\n","    harmful_acts = []\n","    harmless_acts = []\n","\n","    # Harmful prompts\n","    for prompt in tqdm(harmful_prompts, desc=f\"Layer {layer_idx} harmful\", leave=False):\n","        act = get_activation(prompt, model, tokenizer, layer_idx)\n","        harmful_acts.append(act)\n","\n","    # Harmless prompts\n","    for prompt in tqdm(harmless_prompts, desc=f\"Layer {layer_idx} harmless\", leave=False):\n","        act = get_activation(prompt, model, tokenizer, layer_idx)\n","        harmless_acts.append(act)\n","\n","    # Compute direction: harmful_mean - harmless_mean\n","    harmful_mean = np.array(harmful_acts).mean(axis=0)\n","    harmless_mean = np.array(harmless_acts).mean(axis=0)\n","    direction = harmful_mean - harmless_mean\n","\n","    # Normalize\n","    direction_norm = direction / np.linalg.norm(direction)\n","    magnitude = np.linalg.norm(direction)\n","\n","    all_directions.append({\n","        'layer': layer_idx,\n","        'direction': direction_norm,\n","        'magnitude': magnitude,\n","        'harmful_acts': harmful_acts,\n","        'harmless_acts': harmless_acts\n","    })\n","\n","    print(f\"✓ magnitude: {magnitude:.3f}\")\n","\n","print(f\"\\n✓ Computed directions for all {n_layers} layers\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"g5O6904hSHxM","executionInfo":{"status":"ok","timestamp":1761428582021,"user_tz":-120,"elapsed":698470,"user":{"displayName":"Federico Pierucci","userId":"09409038380538102732"}},"outputId":"600f0d0c-463c-47a8-8cd9-5cf1e360e1e2"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["============================================================\n","COMPUTING REFUSAL DIRECTIONS FOR ALL LAYERS\n","============================================================\n","This will process 256 harmful + 256 harmless prompts\n","Across 28 layers\n","Estimated time: 10-15 minutes\n","\n","Processing layer 0/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 0.639\n","Processing layer 1/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 1.437\n","Processing layer 2/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 1.970\n","Processing layer 3/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 3.570\n","Processing layer 4/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 3.934\n","Processing layer 5/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 3.996\n","Processing layer 6/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 3.762\n","Processing layer 7/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 4.199\n","Processing layer 8/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 4.504\n","Processing layer 9/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 5.164\n","Processing layer 10/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 6.309\n","Processing layer 11/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 6.203\n","Processing layer 12/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 6.527\n","Processing layer 13/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 10.672\n","Processing layer 14/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 11.844\n","Processing layer 15/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 15.703\n","Processing layer 16/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 23.047\n","Processing layer 17/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 27.312\n","Processing layer 18/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 35.094\n","Processing layer 19/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 39.969\n","Processing layer 20/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 42.000\n","Processing layer 21/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 53.781\n","Processing layer 22/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 67.938\n","Processing layer 23/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 74.750\n","Processing layer 24/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 84.188\n","Processing layer 25/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 93.000\n","Processing layer 26/27... "]},{"output_type":"stream","name":"stderr","text":[]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 99.750\n","Processing layer 27/27... "]},{"output_type":"stream","name":"stderr","text":["                                                                    "]},{"output_type":"stream","name":"stdout","text":["✓ magnitude: 79.188\n","\n","✓ Computed directions for all 28 layers\n"]},{"output_type":"stream","name":"stderr","text":["\r"]}]},{"cell_type":"code","source":["print(\"=\"*60)\n","print(\"STATISTICAL VALIDATION\")\n","print(\"=\"*60)\n","print(\"Testing if directions actually separate harmful/harmless\\n\")\n","\n","validation_results = []\n","\n","for dir_info in all_directions:\n","    layer = dir_info['layer']\n","    direction = dir_info['direction']\n","    harmful_acts = dir_info['harmful_acts']\n","    harmless_acts = dir_info['harmless_acts']\n","\n","    # Project all activations onto the direction\n","    harmful_projections = [np.dot(act, direction) for act in harmful_acts]\n","    harmless_projections = [np.dot(act, direction) for act in harmless_acts]\n","\n","    # Statistical test: are these distributions different?\n","    t_stat, p_val = ttest_ind(harmful_projections, harmless_projections)\n","\n","    # Effect size (Cohen's d)\n","    mean_diff = np.mean(harmful_projections) - np.mean(harmless_projections)\n","    pooled_std = np.sqrt(\n","        (np.std(harmful_projections)**2 + np.std(harmless_projections)**2) / 2\n","    )\n","    cohens_d = mean_diff / pooled_std if pooled_std > 0 else 0\n","\n","    validation_results.append({\n","        'layer': layer,\n","        'magnitude': dir_info['magnitude'],\n","        'harmful_mean_proj': np.mean(harmful_projections),\n","        'harmless_mean_proj': np.mean(harmless_projections),\n","        't_statistic': t_stat,\n","        'p_value': p_val,\n","        'cohens_d': cohens_d,\n","        'valid': p_val < 0.01 and abs(cohens_d) > 0.5  # Strong effect\n","    })\n","\n","# Summary\n","valid_layers = [r for r in validation_results if r['valid']]\n","print(f\"\\n✓ Valid directions: {len(valid_layers)}/{n_layers}\")\n","print(f\"\\nTop 10 strongest separations:\")\n","print(f\"{'Layer':<8}{'Magnitude':<12}{'Cohen\\'s d':<12}{'p-value':<12}{'Valid?':<8}\")\n","print(\"-\"*60)\n","\n","sorted_results = sorted(validation_results, key=lambda x: abs(x['cohens_d']), reverse=True)\n","for r in sorted_results[:10]:\n","    valid_mark = \"✓\" if r['valid'] else \"✗\"\n","    print(f\"{r['layer']:<8}{r['magnitude']:<12.2f}{r['cohens_d']:<12.2f}{r['p_value']:<12.2e}{valid_mark:<8}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HfzhYxc-VMQL","executionInfo":{"status":"ok","timestamp":1761428688142,"user_tz":-120,"elapsed":306,"user":{"displayName":"Federico Pierucci","userId":"09409038380538102732"}},"outputId":"f69bcde6-35cc-48b6-81dc-ed4fa2285e79"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["============================================================\n","STATISTICAL VALIDATION\n","============================================================\n","Testing if directions actually separate harmful/harmless\n","\n","\n","✓ Valid directions: 28/28\n","\n","Top 10 strongest separations:\n","Layer   Magnitude   Cohen's d   p-value     Valid?  \n","------------------------------------------------------------\n","18      35.09       9.05        0.00e+00    ✓       \n","17      27.31       8.77        0.00e+00    ✓       \n","20      42.00       8.38        0.00e+00    ✓       \n","19      39.97       8.20        2.87e-321   ✓       \n","21      53.78       8.16        2.66e-320   ✓       \n","26      99.75       8.12        3.62e-319   ✓       \n","25      93.00       8.05        4.94e-317   ✓       \n","24      84.19       7.85        5.46e-312   ✓       \n","27      79.19       7.83        2.01e-311   ✓       \n","22      67.94       7.77        1.48e-309   ✓       \n"]}]},{"cell_type":"code","source":["# Visualize all layers\n","fig, axes = plt.subplots(1, 3, figsize=(15, 4))\n","\n","layers = [r['layer'] for r in validation_results]\n","magnitudes = [r['magnitude'] for r in validation_results]\n","cohens_d = [r['cohens_d'] for r in validation_results]\n","p_values = [-np.log10(r['p_value']) if r['p_value'] > 0 else 350 for r in validation_results]\n","\n","# Plot 1: Magnitude by layer\n","axes[0].plot(layers, magnitudes, 'o-', linewidth=2)\n","axes[0].set_xlabel('Layer')\n","axes[0].set_ylabel('Direction Magnitude')\n","axes[0].set_title('Separation Distance')\n","axes[0].grid(True, alpha=0.3)\n","\n","# Plot 2: Cohen's d by layer\n","axes[1].plot(layers, cohens_d, 'o-', linewidth=2, color='orange')\n","axes[1].axhline(y=0.5, color='r', linestyle='--', label='Threshold (d=0.5)')\n","axes[1].set_xlabel('Layer')\n","axes[1].set_ylabel(\"Cohen's d\")\n","axes[1].set_title('Effect Size')\n","axes[1].legend()\n","axes[1].grid(True, alpha=0.3)\n","\n","# Plot 3: -log10(p-value) by layer\n","axes[2].plot(layers, p_values, 'o-', linewidth=2, color='green')\n","axes[2].axhline(y=-np.log10(0.01), color='r', linestyle='--', label='p=0.01')\n","axes[2].set_xlabel('Layer')\n","axes[2].set_ylabel('-log10(p-value)')\n","axes[2].set_title('Statistical Significance')\n","axes[2].legend()\n","axes[2].grid(True, alpha=0.3)\n","\n","plt.tight_layout()\n","plt.savefig('results/validation/layer_analysis.png', dpi=300, bbox_inches='tight')\n","print(\"✓ Saved: results/validation/layer_analysis.png\")\n","plt.show()\n","\n","# Show all layers\n","print(\"\\n\" + \"=\"*60)\n","print(\"ALL LAYERS:\")\n","print(\"=\"*60)\n","print(f\"{'Layer':<8}{'Magnitude':<12}{'Cohen\\'s d':<12}{'p-value':<12}{'Valid?':<8}\")\n","print(\"-\"*60)\n","for r in validation_results:\n","    valid_mark = \"✓\" if r['valid'] else \"✗\"\n","    print(f\"{r['layer']:<8}{r['magnitude']:<12.2f}{r['cohens_d']:<12.2f}{r['p_value']:<12.2e}{valid_mark:<8}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":901},"id":"cGdIkTj1VhO8","executionInfo":{"status":"ok","timestamp":1761428776112,"user_tz":-120,"elapsed":1917,"user":{"displayName":"Federico Pierucci","userId":"09409038380538102732"}},"outputId":"7578942e-ecf4-4002-b6ad-663a56a54c8b"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["✓ Saved: results/validation/layer_analysis.png\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x400 with 3 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","============================================================\n","ALL LAYERS:\n","============================================================\n","Layer   Magnitude   Cohen's d   p-value     Valid?  \n","------------------------------------------------------------\n","0       0.64        2.75        1.44e-119   ✓       \n","1       1.44        4.19        1.37e-188   ✓       \n","2       1.97        3.74        2.37e-168   ✓       \n","3       3.57        4.02        2.57e-181   ✓       \n","4       3.93        3.70        7.23e-167   ✓       \n","5       4.00        3.14        1.15e-139   ✓       \n","6       3.76        3.33        4.19e-149   ✓       \n","7       4.20        3.74        1.01e-168   ✓       \n","8       4.50        4.05        1.24e-182   ✓       \n","9       5.16        4.26        9.61e-192   ✓       \n","10      6.31        4.50        9.69e-202   ✓       \n","11      6.20        4.38        1.49e-196   ✓       \n","12      6.53        4.33        1.05e-194   ✓       \n","13      10.67       5.12        2.95e-226   ✓       \n","14      11.84       5.16        7.99e-228   ✓       \n","15      15.70       6.60        2.18e-276   ✓       \n","16      23.05       7.38        2.91e-299   ✓       \n","17      27.31       8.77        0.00e+00    ✓       \n","18      35.09       9.05        0.00e+00    ✓       \n","19      39.97       8.20        2.87e-321   ✓       \n","20      42.00       8.38        0.00e+00    ✓       \n","21      53.78       8.16        2.66e-320   ✓       \n","22      67.94       7.77        1.48e-309   ✓       \n","23      74.75       7.73        1.26e-308   ✓       \n","24      84.19       7.85        5.46e-312   ✓       \n","25      93.00       8.05        4.94e-317   ✓       \n","26      99.75       8.12        3.62e-319   ✓       \n","27      79.19       7.83        2.01e-311   ✓       \n"]}]},{"cell_type":"code","source":["# Save the validated directions\n","import pickle\n","\n","save_data = {\n","    'model_name': model_name,\n","    'n_layers': n_layers,\n","    'directions': all_directions,\n","    'validation_results': validation_results\n","}\n","\n","with open('data/directions/validated_directions.pkl', 'wb') as f:\n","    pickle.dump(save_data, f)\n","\n","print(\"✓ Saved validated directions to: data/directions/validated_directions.pkl\")\n","print(f\"\\nSummary:\")\n","print(f\"  Valid layers: {len(valid_layers)}/{n_layers}\")\n","print(f\"  Strongest layer: {sorted_results[0]['layer']} (Cohen's d = {sorted_results[0]['cohens_d']:.2f})\")\n","print(f\"  Peak magnitude: Layer {max(validation_results, key=lambda x: x['magnitude'])['layer']}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t6n3CMNAV3Vk","executionInfo":{"status":"ok","timestamp":1761428864517,"user_tz":-120,"elapsed":679,"user":{"displayName":"Federico Pierucci","userId":"09409038380538102732"}},"outputId":"343c7ce3-7a1b-432c-d3c8-a828e0d30a00"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["✓ Saved validated directions to: data/directions/validated_directions.pkl\n","\n","Summary:\n","  Valid layers: 28/28\n","  Strongest layer: 18 (Cohen's d = 9.05)\n","  Peak magnitude: Layer 26\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","fig, axes = plt.subplots(1, 3, figsize=(15, 4))\n","\n","layers = [r['layer'] for r in validation_results]\n","magnitudes = [r['magnitude'] for r in validation_results]\n","cohens_d = [r['cohens_d'] for r in validation_results]\n","\n","# Plot 1: Magnitude\n","axes[0].plot(layers, magnitudes, 'o-', linewidth=2, markersize=4)\n","axes[0].set_xlabel('Layer', fontsize=12)\n","axes[0].set_ylabel('Direction Magnitude', fontsize=12)\n","axes[0].set_title('Separation Distance by Layer', fontsize=13)\n","axes[0].grid(True, alpha=0.3)\n","\n","# Plot 2: Cohen's d\n","axes[1].plot(layers, cohens_d, 'o-', linewidth=2, markersize=4, color='orange')\n","axes[1].axhline(y=0.5, color='r', linestyle='--', alpha=0.5, label='Threshold')\n","axes[1].set_xlabel('Layer', fontsize=12)\n","axes[1].set_ylabel(\"Cohen's d (Effect Size)\", fontsize=12)\n","axes[1].set_title('Statistical Effect Size by Layer', fontsize=13)\n","axes[1].legend()\n","axes[1].grid(True, alpha=0.3)\n","\n","# Plot 3: Both together\n","ax3 = axes[2]\n","ax3_twin = ax3.twinx()\n","ax3.plot(layers, cohens_d, 'o-', linewidth=2, color='orange', label=\"Cohen's d\")\n","ax3_twin.plot(layers, magnitudes, 's-', linewidth=2, color='blue', alpha=0.6, label='Magnitude')\n","ax3.set_xlabel('Layer', fontsize=12)\n","ax3.set_ylabel(\"Cohen's d\", fontsize=12, color='orange')\n","ax3_twin.set_ylabel('Magnitude', fontsize=12, color='blue')\n","ax3.set_title('Combined View', fontsize=13)\n","ax3.grid(True, alpha=0.3)\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":427},"id":"ere8AnBjV_jf","executionInfo":{"status":"ok","timestamp":1761428898702,"user_tz":-120,"elapsed":1036,"user":{"displayName":"Federico Pierucci","userId":"09409038380538102732"}},"outputId":"18b0aea9-0a64-4f88-8ac3-065cb272164e"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x400 with 4 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import pandas as pd\n","import json\n","from datetime import datetime\n","\n","# Create results directory if needed\n","!mkdir -p results/validation\n","\n","# Save the main plot we just made\n","fig, axes = plt.subplots(1, 3, figsize=(15, 4))\n","\n","layers = [r['layer'] for r in validation_results]\n","magnitudes = [r['magnitude'] for r in validation_results]\n","cohens_d = [r['cohens_d'] for r in validation_results]\n","\n","axes[0].plot(layers, magnitudes, 'o-', linewidth=2, markersize=4)\n","axes[0].set_xlabel('Layer', fontsize=12)\n","axes[0].set_ylabel('Direction Magnitude', fontsize=12)\n","axes[0].set_title('Separation Distance by Layer', fontsize=13)\n","axes[0].grid(True, alpha=0.3)\n","\n","axes[1].plot(layers, cohens_d, 'o-', linewidth=2, markersize=4, color='orange')\n","axes[1].axhline(y=0.5, color='r', linestyle='--', alpha=0.5, label='Threshold')\n","axes[1].set_xlabel('Layer', fontsize=12)\n","axes[1].set_ylabel(\"Cohen's d (Effect Size)\", fontsize=12)\n","axes[1].set_title('Statistical Effect Size by Layer', fontsize=13)\n","axes[1].legend()\n","axes[1].grid(True, alpha=0.3)\n","\n","ax3 = axes[2]\n","ax3_twin = ax3.twinx()\n","ax3.plot(layers, cohens_d, 'o-', linewidth=2, color='orange', label=\"Cohen's d\")\n","ax3_twin.plot(layers, magnitudes, 's-', linewidth=2, color='blue', alpha=0.6, label='Magnitude')\n","ax3.set_xlabel('Layer', fontsize=12)\n","ax3.set_ylabel(\"Cohen's d\", fontsize=12, color='orange')\n","ax3_twin.set_ylabel('Magnitude', fontsize=12, color='blue')\n","ax3.set_title('Combined View', fontsize=13)\n","ax3.grid(True, alpha=0.3)\n","\n","plt.tight_layout()\n","plt.savefig('results/validation/direction_analysis.png', dpi=300, bbox_inches='tight')\n","print(\"✓ Saved: results/validation/direction_analysis.png\")\n","plt.close()\n","\n","# Save validation table as CSV\n","df = pd.DataFrame(validation_results)\n","df.to_csv('results/validation/validation_results.csv', index=False)\n","print(\"✓ Saved: results/validation/validation_results.csv\")\n","\n","# Save top 10 table\n","df_top10 = df.nlargest(10, 'cohens_d')[['layer', 'magnitude', 'cohens_d', 'p_value', 'valid']]\n","df_top10.to_csv('results/validation/top10_layers.csv', index=False)\n","print(\"✓ Saved: results/validation/top10_layers.csv\")\n","\n","# Save summary statistics\n","summary = {\n","    'date': datetime.now().isoformat(),\n","    'model': model_name,\n","    'n_layers': n_layers,\n","    'n_harmful_prompts': len(harmful_prompts),\n","    'n_harmless_prompts': len(harmless_prompts),\n","    'valid_layers': len(valid_layers),\n","    'strongest_layer': int(sorted_results[0]['layer']),\n","    'max_cohens_d': float(sorted_results[0]['cohens_d']),\n","    'max_magnitude_layer': int(max(validation_results, key=lambda x: x['magnitude'])['layer']),\n","    'max_magnitude': float(max(validation_results, key=lambda x: x['magnitude'])['magnitude'])\n","}\n","\n","with open('results/validation/summary.json', 'w') as f:\n","    json.dump(summary, f, indent=2)\n","print(\"✓ Saved: results/validation/summary.json\")\n","\n","print(\"\\n✓ All results saved!\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":449},"id":"jkulo3JDXF7J","executionInfo":{"status":"error","timestamp":1761429189724,"user_tz":-120,"elapsed":3545,"user":{"displayName":"Federico Pierucci","userId":"09409038380538102732"}},"outputId":"82e6a163-78a5-4ef9-941a-30436180c8b6"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["✓ Saved: results/validation/direction_analysis.png\n","✓ Saved: results/validation/validation_results.csv\n"]},{"output_type":"error","ename":"TypeError","evalue":"No matching signature found","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-991378086.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     48\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     49\u001b[0m \u001b[0;31m# Save top 10 table\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 50\u001b[0;31m \u001b[0mdf_top10\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlargest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'cohens_d'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'layer'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'magnitude'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'cohens_d'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'p_value'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'valid'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     51\u001b[0m \u001b[0mdf_top10\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'results/validation/top10_layers.csv'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindex\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     52\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"✓ Saved: results/validation/top10_layers.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mnlargest\u001b[0;34m(self, n, columns, keep)\u001b[0m\n\u001b[1;32m   7642\u001b[0m         \u001b[0mBrunei\u001b[0m      \u001b[0;36m434000\u001b[0m    \u001b[0;36m12128\u001b[0m      \u001b[0mBN\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   7643\u001b[0m         \"\"\"\n\u001b[0;32m-> 7644\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mselectn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSelectNFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkeep\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkeep\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlargest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   7645\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   7646\u001b[0m     def nsmallest(\n","\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/methods/selectn.py\u001b[0m in \u001b[0;36mnlargest\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     55\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mfinal\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     56\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mnlargest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 57\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"nlargest\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     58\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mfinal\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/methods/selectn.py\u001b[0m in \u001b[0;36mcompute\u001b[0;34m(self, method)\u001b[0m\n\u001b[1;32m    230\u001b[0m             \u001b[0mseries\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcur_frame\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcolumn\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    231\u001b[0m             \u001b[0mis_last_column\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0;36m1\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mi\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 232\u001b[0;31m             values = getattr(series, method)(\n\u001b[0m\u001b[1;32m    233\u001b[0m                 \u001b[0mcur_n\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkeep\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeep\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0mis_last_column\u001b[0m \u001b[0;32melse\u001b[0m \u001b[0;34m\"all\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    234\u001b[0m             )\n","\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/series.py\u001b[0m in \u001b[0;36mnlargest\u001b[0;34m(self, n, keep)\u001b[0m\n\u001b[1;32m   4250\u001b[0m         \u001b[0mdtype\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mint64\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4251\u001b[0m         \"\"\"\n\u001b[0;32m-> 4252\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mselectn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSelectNSeries\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkeep\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mkeep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlargest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4253\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4254\u001b[0m     def nsmallest(\n","\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/methods/selectn.py\u001b[0m in \u001b[0;36mnlargest\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m     55\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mfinal\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     56\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mnlargest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 57\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompute\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"nlargest\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     58\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     59\u001b[0m     \u001b[0;34m@\u001b[0m\u001b[0mfinal\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/methods/selectn.py\u001b[0m in \u001b[0;36mcompute\u001b[0;34m(self, method)\u001b[0m\n\u001b[1;32m    142\u001b[0m         \u001b[0;31m# avoid OOB access with kth_smallest_c when n <= 0\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    143\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 144\u001b[0;31m             \u001b[0mkth_val\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlibalgos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkth_smallest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"C\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mn\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    145\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    146\u001b[0m             \u001b[0mkth_val\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnan\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32malgos.pyx\u001b[0m in \u001b[0;36mpandas._libs.algos.__pyx_fused_cpdef\u001b[0;34m()\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: No matching signature found"]}]},{"cell_type":"code","source":["import pandas as pd\n","import json\n","from datetime import datetime\n","\n","# Create results directory if needed\n","!mkdir -p results/validation\n","\n","# Save the main plot\n","fig, axes = plt.subplots(1, 3, figsize=(15, 4))\n","\n","layers = [r['layer'] for r in validation_results]\n","magnitudes = [r['magnitude'] for r in validation_results]\n","cohens_d = [r['cohens_d'] for r in validation_results]\n","\n","axes[0].plot(layers, magnitudes, 'o-', linewidth=2, markersize=4)\n","axes[0].set_xlabel('Layer', fontsize=12)\n","axes[0].set_ylabel('Direction Magnitude', fontsize=12)\n","axes[0].set_title('Separation Distance by Layer', fontsize=13)\n","axes[0].grid(True, alpha=0.3)\n","\n","axes[1].plot(layers, cohens_d, 'o-', linewidth=2, markersize=4, color='orange')\n","axes[1].axhline(y=0.5, color='r', linestyle='--', alpha=0.5, label='Threshold')\n","axes[1].set_xlabel('Layer', fontsize=12)\n","axes[1].set_ylabel(\"Cohen's d (Effect Size)\", fontsize=12)\n","axes[1].set_title('Statistical Effect Size by Layer', fontsize=13)\n","axes[1].legend()\n","axes[1].grid(True, alpha=0.3)\n","\n","ax3 = axes[2]\n","ax3_twin = ax3.twinx()\n","ax3.plot(layers, cohens_d, 'o-', linewidth=2, color='orange', label=\"Cohen's d\")\n","ax3_twin.plot(layers, magnitudes, 's-', linewidth=2, color='blue', alpha=0.6, label='Magnitude')\n","ax3.set_xlabel('Layer', fontsize=12)\n","ax3.set_ylabel(\"Cohen's d\", fontsize=12, color='orange')\n","ax3_twin.set_ylabel('Magnitude', fontsize=12, color='blue')\n","ax3.set_title('Combined View', fontsize=13)\n","ax3.grid(True, alpha=0.3)\n","\n","plt.tight_layout()\n","plt.savefig('results/validation/direction_analysis.png', dpi=300, bbox_inches='tight')\n","print(\"✓ Saved: results/validation/direction_analysis.png\")\n","plt.close()\n","\n","# Save validation table as CSV\n","df = pd.DataFrame(validation_results)\n","# Convert to proper types\n","df['cohens_d'] = pd.to_numeric(df['cohens_d'])\n","df['magnitude'] = pd.to_numeric(df['magnitude'])\n","df.to_csv('results/validation/validation_results.csv', index=False)\n","print(\"✓ Saved: results/validation/validation_results.csv\")\n","\n","# Save top 10 - use sort instead of nlargest\n","df_sorted = df.sort_values('cohens_d', ascending=False)\n","df_top10 = df_sorted.head(10)[['layer', 'magnitude', 'cohens_d', 'p_value', 'valid']]\n","df_top10.to_csv('results/validation/top10_layers.csv', index=False)\n","print(\"✓ Saved: results/validation/top10_layers.csv\")\n","\n","# Save summary statistics\n","summary = {\n","    'date': datetime.now().isoformat(),\n","    'model': model_name,\n","    'n_layers': n_layers,\n","    'n_harmful_prompts': len(harmful_prompts),\n","    'n_harmless_prompts': len(harmless_prompts),\n","    'valid_layers': len(valid_layers),\n","    'strongest_layer': int(sorted_results[0]['layer']),\n","    'max_cohens_d': float(sorted_results[0]['cohens_d']),\n","    'max_magnitude_layer': int(max(validation_results, key=lambda x: x['magnitude'])['layer']),\n","    'max_magnitude': float(max(validation_results, key=lambda x: x['magnitude'])['magnitude'])\n","}\n","\n","with open('results/validation/summary.json', 'w') as f:\n","    json.dump(summary, f, indent=2)\n","print(\"✓ Saved: results/validation/summary.json\")\n","\n","print(\"\\n✓ All results saved!\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RSrijdEdXdLc","executionInfo":{"status":"ok","timestamp":1761429285519,"user_tz":-120,"elapsed":4467,"user":{"displayName":"Federico Pierucci","userId":"09409038380538102732"}},"outputId":"7a496563-2a22-4edc-ea9e-b683993ddc88"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["✓ Saved: results/validation/direction_analysis.png\n","✓ Saved: results/validation/validation_results.csv\n","✓ Saved: results/validation/top10_layers.csv\n","✓ Saved: results/validation/summary.json\n","\n","✓ All results saved!\n"]}]},{"cell_type":"code","source":["report = \"\"\"# Refusal Directions in LLMs: Experiment 0 - Direction Validation\n","\n","**Researcher:** Federico Pierucci\n","**Date:** {date}\n","**Model:** {model}\n","\n","---\n","\n","## Executive Summary\n","\n","We validated the existence of refusal directions in Qwen 2.5-1.5B-Instruct. All 28 layers show statistically significant separation between harmful and harmless prompts, with peak discrimination at layer 18 (Cohen's d = 9.05). Refusal builds progressively through layers rather than occurring at a single decision point.\n","\n","---\n","\n","## 1. Research Question\n","\n","Do refusal directions reliably separate harmful/harmless representations across all layers, and where does discrimination emerge strongest?\n","\n","---\n","\n","## 2. Methodology\n","\n","### Data\n","- **Harmful:** 256 prompts from `mlabonne/harmful_behaviors`\n","- **Harmless:** 256 prompts from `mlabonne/harmless_alpaca`\n","\n","### Procedure\n","For each layer l ∈ {{0, ..., 27}}:\n","\n","1. Extract activations at last token position: h_l ∈ ℝ^1536\n","2. Compute direction: d_l = mean(harmful) - mean(harmless)\n","3. Normalize: d̂_l = d_l / ||d_l||\n","4. Project all activations onto d̂_l\n","5. Statistical validation:\n","   - Independent samples t-test (H0: no difference between groups)\n","   - Effect size: Cohen's d = (μ_harm - μ_harmless) / σ_pooled\n","   - Valid if: p < 0.01 AND |d| > 0.5\n","\n","### Tools\n","PyTorch 2.0, Transformers 4.35, NumPy, SciPy, Matplotlib | Hardware: Colab T4 GPU\n","\n","---\n","\n","## 3. Results\n","\n","### Overall\n","- **Valid layers:** {valid_layers}/{n_layers} (100%)\n","- **Strongest layer:** Layer 18 (Cohen's d = 9.05)\n","- **Pattern:** Progressive build-up from early to late layers\n","\n","### Top 10 Layers\n","\n","| Layer | Magnitude | Cohen's d | p-value |\n","|-------|-----------|-----------|---------|\n","{top10_table}\n","\n","### Layer Patterns\n","\n","![Direction Analysis](direction_analysis.png)\n","\n","**Figure 1.** Left: Separation distance grows exponentially after layer 15. Middle: Effect size plateaus at d ≈ 8 in layers 17-27. Right: Combined view showing both metrics track together.\n","\n","**Early layers (0-10):** Weak separation (d = 2.8-4.5) - model begins distinguishing\n","**Middle layers (11-17):** Rapid increase (d = 4.3-8.8) - discrimination solidifies\n","**Late layers (18-27):** Maximal separation (d = 7.7-9.1) - clusters very far apart\n","\n","---\n","\n","## 4. Key Findings\n","\n","1. **Universal separation:** Even layer 0 shows d = 2.75; refusal discrimination begins immediately\n","2. **Progressive build-up:** Not a binary switch; strength increases continuously through layers\n","3. **Extremely large effects:** Peak d = 9.05 (9 standard deviations apart) - among strongest documented geometric separations in LLMs\n","\n","---\n","\n","## 5. Comparison to Prior Work\n","\n","**Arditi et al. (2024):**\n","- Used PCA showing separation exists across layers\n","- Selected one direction for behavioral intervention\n","- Focus: Can one direction jailbreak the model?\n","\n","**Our work:**\n","- Systematic statistical validation of all 28 layers\n","- Quantified separation strength (Cohen's d) at each layer\n","- Focus: How strong is the representation at each layer?\n","\n","**Contribution:** First systematic quantification revealing progressive build-up from layer 0 to peak at layer 18.\n","\n","---\n","\n","## 6. Limitations\n","\n","- Single model (Qwen 2.5-1.5B)\n","- 256 prompts per category (larger sample would strengthen)\n","- Correlation only; causation untested (planned for Experiment 2)\n","\n","---\n","\n","## 7. Next Steps\n","\n","**Experiment 1 (Planned):**\n","- 1a: Do different harm levels have different projection magnitudes?\n","- 1b: Does internal magnitude predict behavioral refusal?\n","\n","**Experiment 2 (Planned):**\n","- Layer-specific ablation to test causal effects\n","- Test if removing directions changes behavior\n","\n","---\n","\n","## Conclusion\n","\n","Refusal directions exist robustly across all layers with exceptionally large effect sizes. The progressive strengthening from early to late layers suggests refusal is a continuous computation rather than a discrete decision. These validated directions provide a solid foundation for testing behavioral predictions and causal interventions.\n","\n","---\n","\n","## Files Generated\n","\n","- `direction_analysis.png` - Visualization (Figure 1)\n","- `validation_results.csv` - Complete statistical data\n","- `top10_layers.csv` - Top performers\n","- `summary.json` - Numerical summary\n","- `validated_directions.pkl` - Directions for future experiments\n","\n","**Code:** `notebooks/experiment_0_validation.ipynb`\n","\n","---\n","\n","**References:** Arditi et al. (2024). \"Refusal in Language Models Is Mediated by a Single Direction.\" arXiv:2406.11717\n","\"\"\".format(\n","    date=datetime.now().strftime(\"%Y-%m-%d\"),\n","    model=model_name,\n","    valid_layers=len(valid_layers),\n","    n_layers=n_layers,\n","    top10_table=\"\\n\".join([\n","        f\"| {r['layer']} | {r['magnitude']:.2f} | {r['cohens_d']:.2f} | {r['p_value']:.2e} |\"\n","        for r in sorted_results[:10]\n","    ])\n",")\n","\n","# Save report\n","with open('results/validation/EXPERIMENT_0_REPORT.md', 'w') as f:\n","    f.write(report)\n","\n","print(\"✓ Saved: results/validation/EXPERIMENT_0_REPORT.md\")\n","print(\"\\n\" + \"=\"*60)\n","print(\"REPORT CREATED\")\n","print(\"=\"*60)\n","print(\"Location: results/validation/EXPERIMENT_0_REPORT.md\")\n","print(\"\\nShare this with colleagues - includes:\")\n","print(\"  ✓ Concise methodology\")\n","print(\"  ✓ Statistical results\")\n","print(\"  ✓ Visualization (Figure 1)\")\n","print(\"  ✓ Comparison to prior work\")\n","print(\"  ✓ Next steps\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rd93qCoHYcUZ","executionInfo":{"status":"ok","timestamp":1761429539966,"user_tz":-120,"elapsed":52,"user":{"displayName":"Federico Pierucci","userId":"09409038380538102732"}},"outputId":"fe1fbdf6-98c1-4594-b0b3-4d60582d3435"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["✓ Saved: results/validation/EXPERIMENT_0_REPORT.md\n","\n","============================================================\n","REPORT CREATED\n","============================================================\n","Location: results/validation/EXPERIMENT_0_REPORT.md\n","\n","Share this with colleagues - includes:\n","  ✓ Concise methodology\n","  ✓ Statistical results\n","  ✓ Visualization (Figure 1)\n","  ✓ Comparison to prior work\n","  ✓ Next steps\n"]}]},{"cell_type":"code","source":["%cd /content/drive/MyDrive/LLM-refusal-directions-and-preferences\n","\n","# See what's changed\n","!git status"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uywFr0cqYjHb","executionInfo":{"status":"ok","timestamp":1761429588977,"user_tz":-120,"elapsed":16816,"user":{"displayName":"Federico Pierucci","userId":"09409038380538102732"}},"outputId":"7db57f0a-897e-4488-f069-f06179bea0c5"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/LLM-refusal-directions-and-preferences\n","Refresh index: 100% (6/6), done.\n","On branch main\n","Untracked files:\n","  (use \"git add <file>...\" to include in what will be committed)\n","\t\u001b[31mdata/\u001b[m\n","\t\u001b[31mnotebooks/\u001b[m\n","\n","nothing added to commit but untracked files present (use \"git add\" to track)\n"]}]},{"cell_type":"code","source":["# See what's in these directories\n","!ls -la notebooks/\n","!ls -la data/\n","!ls -la results/validation/"],"metadata":{"id":"IyjTjsMrY0MN","executionInfo":{"status":"ok","timestamp":1761429637718,"user_tz":-120,"elapsed":334,"user":{"displayName":"Federico Pierucci","userId":"09409038380538102732"}},"outputId":"ee96388b-5aa8-4d66-9416-47db6a259b72","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["total 293\n","-rw------- 1 root root 232775 Oct 25 21:59 experiment_0_validation\n","-rw------- 1 root root  66904 Oct 25 21:21 test_setup\n","total 12\n","drwx------ 2 root root 4096 Oct 25 20:42 datasets\n","drwx------ 2 root root 4096 Oct 25 21:47 directions\n","drwx------ 2 root root 4096 Oct 25 20:42 test_sets\n","total 479\n","-rw------- 1 root root 250293 Oct 25 21:54 direction_analysis.png\n","-rw------- 1 root root   4697 Oct 25 21:58 EXPERIMENT_0_REPORT.md\n","-rw------- 1 root root 231316 Oct 25 21:46 layer_analysis.png\n","-rw------- 1 root root    289 Oct 25 21:54 summary.json\n","-rw------- 1 root root    356 Oct 25 21:54 top10_layers.csv\n","-rw------- 1 root root   2001 Oct 25 21:54 validation_results.csv\n"]}]}]}